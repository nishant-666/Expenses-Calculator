{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","style","color","padding","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","onChange","target","placeholder","required","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"0NAAe,WAACA,EAAOC,GACrB,OAAOA,EAAOC,MACZ,IAAK,qBACH,OAAO,eACFF,EADL,CAEEG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAErF,IAAK,kBACH,OAAO,eACFP,EADL,CAEEG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAE5C,QACE,OAAOH,ICTPQ,EAAe,CACnBL,aAAc,IAIHM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWC,EAAYN,GADH,mBACvCR,EADuC,KAChCe,EADgC,KAkB9C,OAAQ,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CACrCd,aAAcH,EAAMG,aACpBe,kBAhBF,SAA2BZ,GACzBS,EAAS,CACPb,KAAM,qBACNK,QAASD,KAcXa,eAVF,SAAwBd,GACtBU,EAAS,CACPb,KAAM,kBACNK,QAASF,OASVO,ICnCE,SAASQ,EAAiBC,GAC/B,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KCEhD,IAAMC,EAAU,WAAO,IAKtBC,EAJmBC,qBAAWjB,GAA5BN,aAEqBwB,KAAI,SAAAtB,GAAW,OAAIA,EAAYuB,UAEtCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACE,oCACE,4CACF,4BAAKZ,EAAiBK,MCVbQ,EAAiB,WAAO,IAG7BC,EAFmBR,qBAAWjB,GAA5BN,aAEqBwB,KAAI,SAAAtB,GAAW,OAAIA,EAAYuB,UAEtDO,EAASD,EACZ9B,QAAO,SAAA2B,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAELI,IAEH,EADDF,EAAQ9B,QAAO,SAAA2B,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAEtEC,QAAQ,GAEV,OACE,yBAAKK,UAAU,qBACX,6BACE,wBAAIC,MAAO,CAACC,MAAM,QAAQC,QAAQ,KAAlC,eACR,uBAAGH,UAAU,cAAb,SAA4BjB,EAAiBe,KAEvC,6BACE,wBAAIG,MAAO,CAACC,MAAM,QAAQC,QAAQ,KAAlC,iBACR,uBAAGH,UAAU,eAAb,SAA6BjB,EAAiBgB,OCtBnCK,EAAc,SAAC,GAAqB,IAAnBpC,EAAkB,EAAlBA,YACpBa,EAAsBQ,qBAAWjB,GAAjCS,kBAEFwB,EAAOrC,EAAYuB,OAAS,EAAI,aAAe,aAErD,OACE,wBAAIS,UAAWhC,EAAYuB,OAAS,EAAI,QAAU,QAC/CvB,EAAYsC,KADf,IACqB,8BAAOD,EAAP,SAActB,EAAiBwB,KAAKC,IAAIxC,EAAYuB,UAEvE,4BAAQkB,QAAS,kBAAM5B,EAAkBb,EAAYC,KAAK+B,UAAU,cAApE,OCROU,EAAkB,WAAO,IAC5B5C,EAAiBuB,qBAAWjB,GAA5BN,aAER,OACE,oCACE,mDACA,wBAAIkC,UAAU,QACXlC,EAAawB,KAAI,SAAAtB,GAAW,OAAK,kBAAC,EAAD,CAAa2C,IAAK3C,EAAYC,GAAID,YAAaA,UCT5E4C,EAAiB,WAAO,IAAD,EACVC,mBAAS,IADC,mBAC3BP,EAD2B,KACrBQ,EADqB,OAEND,mBAAS,GAFH,mBAE3BtB,EAF2B,KAEnBwB,EAFmB,KAI1BjC,EAAmBO,qBAAWjB,GAA9BU,eAcR,OACE,oCACE,mDACA,0BAAMkC,SAfO,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAiB,CACrBlD,GAAIsC,KAAKa,MAAsB,IAAhBb,KAAKc,UACpBf,OACAf,QAASA,GAGXT,EAAeqC,KAOX,yBAAKnB,UAAU,gBAEb,2BAAOnC,KAAK,OAAOe,MAAO0B,EAAMgB,SAAU,SAACL,GAAD,OAAOH,EAAQG,EAAEM,OAAO3C,QAAQ4C,YAAY,oCAAoCC,UAAQ,KAEpI,yBAAKzB,UAAU,gBACb,2BAAO0B,QAAQ,UAAf,UACU,6BADV,2CAIA,2BAAO7D,KAAK,SAASe,MAAOW,EAAQ+B,SAAU,SAACL,GAAD,OAAOF,EAAUE,EAAEM,OAAO3C,QAAQ4C,YAAY,eAAeC,UAAQ,KAErH,4BAAQzB,UAAU,OAAlB,sB,MCXO2B,MAdf,WACE,OACE,kBAAC,EAAD,KAEE,yBAAK3B,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCfR4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ce1efcb7.chunk.js","sourcesContent":["export default (state, action) => {\n  switch(action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      }\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      }\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n  transactions: []\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas} from '../utils/format'\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n    <h1>{numberWithCommas(total)}</h1>\n    </>\n  )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas} from '../utils/format'\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n        <div>\n          <h4 style={{color:\"black\",padding:10}}>Your Income</h4>\n  <p className=\"money plus\">₹{numberWithCommas(income)}</p>\n        </div>\n        <div>\n          <h4 style={{color:\"black\",padding:10}}>Your Expenses</h4>\n  <p className=\"money minus\">₹{numberWithCommas(expense)}</p>\n        </div>\n      </div>\n  )\n}\n","\nimport React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas} from '../utils/format'\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? 'You Spent ' : 'You Earned';\n\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text} <span>{sign}₹{numberWithCommas(Math.abs(transaction.amount))}</span>\n      \n      <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\n    </li>\n  )\n}\n","import React, { useContext } from 'react';\nimport { Transaction } from './Transaction';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>Transaction History</h3>\n      <ul className=\"list\">\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n      </ul>\n    </>\n  )\n}\n","import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    }\n\n    addTransaction(newTransaction);\n  }\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          \n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter the Name of the Transaction\" required/>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n            >Amount <br />\n            (Negative - Expense, Positive - Income)</label\n          >\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount\" required />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n","import React from 'react';\n\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n   \n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}